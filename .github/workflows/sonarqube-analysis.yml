name: SonarQube Analysis

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  sonarqube:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: sonar
          POSTGRES_PASSWORD: sonar_password
          POSTGRES_DB: sonarqube
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
      with:
        # Fetch full history for better analysis
        fetch-depth: 0

    - name: Setup Java (required for SonarQube)
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mbstring, xml, ctype

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install Laravel dependencies
      working-directory: ./examples/laravel
      run: composer install --prefer-dist --no-progress

    - name: Install Node.js dependencies
      working-directory: ./examples/nodejs
      run: npm install

    - name: Start SonarQube
      run: |
        docker run -d \
          --name sonarqube \
          -p 9000:9000 \
          -e SONAR_JDBC_URL=jdbc:postgresql://localhost:5432/sonarqube \
          -e SONAR_JDBC_USERNAME=sonar \
          -e SONAR_JDBC_PASSWORD=sonar_password \
          -e SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true \
          sonarqube:community

    - name: Wait for SonarQube to be ready
      run: |
        echo "Waiting for SonarQube to be ready..."
        timeout 300 bash -c 'until curl -s http://localhost:9000/api/system/status | grep -q "UP"; do sleep 10; done'

    - name: Create SonarQube project
      run: |
        curl -u admin:admin -X POST \
          "http://localhost:9000/api/projects/create?project=code-analysis-laravel-nodejs&name=Code%20Analysis%20Laravel%20NodeJS"

    - name: Generate SonarQube token
      id: sonar-token
      run: |
        TOKEN=$(curl -u admin:admin -X POST \
          "http://localhost:9000/api/user_tokens/generate?name=github-actions" | \
          jq -r '.token')
        echo "::add-mask::$TOKEN"
        echo "token=$TOKEN" >> $GITHUB_OUTPUT

    - name: Run PHPStan for external reports
      working-directory: ./examples/laravel
      run: |
        mkdir -p storage/logs
        ./vendor/bin/phpstan analyse --no-progress --error-format=json > storage/logs/phpstan.json || true

    - name: Run ESLint for external reports  
      working-directory: ./examples/nodejs
      run: |
        npx eslint . --format json --output-file eslint-report.json || true

    - name: SonarQube Analysis
      uses: sonarqube-quality-gate-action@master
      env:
        SONAR_TOKEN: ${{ steps.sonar-token.outputs.token }}
        SONAR_HOST_URL: http://localhost:9000
      with:
        projectBaseDir: .
        args: >
          -Dsonar.projectKey=code-analysis-laravel-nodejs
          -Dsonar.projectName="Code Analysis - Laravel & Node.js"
          -Dsonar.sources=examples/laravel/app,examples/nodejs
          -Dsonar.exclusions=**/vendor/**,**/node_modules/**,**/storage/**,**/bootstrap/cache/**
          -Dsonar.sourceEncoding=UTF-8
          -Dsonar.php.file.suffixes=php
          -Dsonar.javascript.file.suffixes=.js

    - name: SonarQube Quality Gate Check
      id: sonarqube-quality-gate-check
      uses: sonarqube-quality-gate-action@master
      env:
        SONAR_TOKEN: ${{ steps.sonar-token.outputs.token }}
        SONAR_HOST_URL: http://localhost:9000

    - name: Comment PR with SonarQube results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const sonarUrl = 'http://localhost:9000/dashboard?id=code-analysis-laravel-nodejs';
          const comment = `## 📊 SonarQube Analysis Results
          
          **Quality Gate:** ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}
          
          **Dashboard:** [View detailed analysis](${sonarUrl})
          
          **Project:** code-analysis-laravel-nodejs
          
          This analysis includes:
          - 🔍 Code quality issues
          - 🛡️ Security vulnerabilities  
          - 📈 Code coverage metrics
          - 🔄 Code duplication analysis
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });